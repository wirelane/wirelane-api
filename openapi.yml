openapi: 3.0.1
info:
  title: Wirelane API
  description: |
    ## Basic information

    To use this API, a `client_id` and `client_secret` is needed. Please contact our support to receive one for your app.

    There are two kinds of endpoints:
    - endpoints that are accessible without having an Wirelane user account, these use the `OAuth2ClientCredential` security scheme.
    - endpoints that are only available to Wirelane user accounts, these use the `OAuth2Password` security scheme.

    ### Host names for the endpoints

    OAuth host names
    - Staging: `oauth.emobilitycloud-staging.com`
    - Production: `oauth.emobilitycloud.com`

    API host names
    - Staging: `api.wirelane-staging.com`
    - Production: `api.wirelane.com`

    ## OAuth
    
    ### Public endpoints (`OAuth2ClientCredential`)

    Retrieving a JWT access token:
    ```
    POST https://${oauth_host_name}/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    grant_type=client_credentials&client_id=...&client_secret=...&scope=account
    ```

    ### Authenticated endpoints (`OAuth2Password`)

    Retrieving a JWT access token:
    ```
    POST https://${oauth_host_name}/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    grant_type=password&client_id=...&client_secret=...&username=...&password=...
    ```
    
    ### Using the access token

    The `access_token` property from the response to the authentication request needs to be provided as authorization header to the requests:
    ```
    Authorization: Bearer ${access_token}
    ```
  contact:
    name: Wirelane GmbH
    url: https://www.wirelane.com
    email: support@wirelane.com
  version: "2.0"
  x-logo:
    url: "https://avatars.githubusercontent.com/u/32132867?s=200&amp;v=4"
    backgroundColor: "#151515"
    altText: "Wirelane"
servers:
  - url: https://api.wirelane-staging.com/apis/emc
    description: Staging server (uses test data)
  - url: https://api.wirelane.com/apis/emc
    description: Production server (uses live data)
security:
  - OAuth2Password:
      - admin
paths:
  /organizations/id/{organizationId}/members:
    get:
      tags:
        - Organizations Members
      summary: Get members of an organization
      description: |
        Get an ordered and paginated list of members of an organization.
        Search query can be used to filter for members by role, status, email or creation user.
      operationId: getMembers
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/itemsPerPageParam'
        - $ref: '#/components/parameters/searchStringParam'
        - name: order_by
          in: query
          description: Name for sort
          required: false
          schema:
            type: string
            enum:
              - email
              - status
        - $ref: '#/components/parameters/orderDirectionParam'
        - name: member_status
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - pending
                - active
                - revoked
                - terminated
      responses:
        200:
          description: List of members
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/members/aid/{accountId}:
    get:
      tags:
        - Organizations Members
      summary: Get member by account ID
      operationId: getMemberByAccountId
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        200:
          description: Returns specific member object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/members/aid/{accountId}/payment_method:
    get:
      tags:
        - Organizations Members Payment Method
      summary: Get the payment method of the member
      operationId: getOrganizationMemberPaymentMethod
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        200:
          description: Returns the PaymentMethod associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/members/aid/{accountId}/subscription:
    get:
      tags:
        - Organizations Members Subscriptions
      summary: Get member subscription
      description: |
        Get subscriptions for organization members
      operationId: getMemberSubscription
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        200:
          description: Returns the members subscription data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/sessions:
    get:
      tags:
        - Organizations Sessions
      summary: Get charging sessions of the organization
      description: |
        Get charging sessions conducted on the organization infrastructure
      operationId: findOrganizationChargingSessions
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/itemsPerPageParam'
        - $ref: '#/components/parameters/searchStringParam'
        - $ref: '#/components/parameters/chargingPointIdParam'
        - $ref: '#/components/parameters/chargingSessionStatusParam'
        - $ref: '#/components/parameters/datePickerSinceParam'
        - $ref: '#/components/parameters/datePickerUntilParam'
        - $ref: '#/components/parameters/sessionOrderByParam'
        - $ref: '#/components/parameters/orderDirectionParam'
        - $ref: '#/components/parameters/organizationTypeParam'
        - $ref: '#/components/parameters/chargePointIdListParam'
        - $ref: '#/components/parameters/ownerIdListParam'
      responses:
        200:
          description: Returns charging sessions of the organization.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingSession'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/sessions/id/{sessionId}:
    get:
      tags:
        - Organizations Sessions
      summary: Get one session from organization
      description: |
        Get a single charging session conducted on the organization infrastructure
      operationId: findOrganizationChargingSession
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/sessionIdParam'
      responses:
        200:
          description: Return specific charging session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingSession'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/stations:
    get:
      tags:
        - Organizations Charging Stations
      summary: Get organization charging stations
      description: |
        Finding charging stations for the account.
      operationId: organizationFindChargingStations
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/itemsPerPageParam'
        - name: order_by
          in: query
          description: Name for sort
          required: false
          schema:
            type: string
            default: address_zip_code
            enum:
              - station_id
              - distance
              - status_update
              - address_zip_code
              - address_city
        - $ref: '#/components/parameters/orderDirectionAscParam'
        - $ref: '#/components/parameters/latParam'
        - $ref: '#/components/parameters/lonParam'
        - $ref: '#/components/parameters/distanceParam'
        - $ref: '#/components/parameters/authTypesParameter'
        - $ref: '#/components/parameters/ownerIdListParam'
        - $ref: '#/components/parameters/chargingTypeParam'
        - name: onboarded
          in: query
          description: Filter by onboarded, check if onboarding is done.
          required: false
          schema:
            type: boolean
        - name: include_roaming
          in: query
          description: Filter by roaming.
          required: false
          schema:
            type: boolean
            default: false
        - name: charging_provider
          in: query
          description: Filter by charging point provider
          required: false
          schema:
           type: array
           items:
             type: string
             enum:
               - echs_delnd
               - emc
               - hubject
               - wirelane
        - $ref: '#/components/parameters/plugTypesParameter'
        - $ref: '#/components/parameters/powerRangeParameter'
        - $ref: '#/components/parameters/pointStatusParam'
        - $ref: '#/components/parameters/searchStringParam'
        - $ref: '#/components/parameters/pointGroupsSearchParam'
        - name: has_point_group
          description: |
            Filters stations on whether they have point-groups set or have none at all.
            `true` = has any group, `false` = has no group, `null` = both cases.
            This filter must not be combined with the `point_groups` filter.
          in: query
          required: false
          schema:
            type: boolean
        - name: charging_sites
          description: |
            Filters stations based on related `ChargingSite.id` values.
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              # pattern for UUID v4 (36 chr)
              pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      responses:
        200:
          description: List of found charging points
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingStation'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/stations/id/{stationId}:
    get:
      tags:
        - Organizations Charging Stations
      summary: Get one station from organization
      description: |
        Get a single charging station by their id
      operationId: organizationFindChargingStation
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/stationIdParam'
      responses:
        200:
          description: Charge point
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStation'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/stations/id/{stationId}/cases:
    get:
      tags:
        - Organizations Charging Stations
      summary: Fetches Salesforce Cases for a charging station
      description: Fetches both open and closed cases from Salesforce
      operationId: organizationListStationCases
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/stationIdParam'
        - name: status
          in: query
          description: Filter by status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - New
                - In progress - Electrician
                - In progress - Timeframe
                - In progress - Wirelane
                - In progress - Wirelane IT
                - Waiting for customer
                - Closed
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/itemsPerPageParam'
        - name: order_by
          in: query
          description: Name for sort
          required: false
          schema:
            default: caseNumber
            type: string
            enum:
              - id
              - caseNumber
              - title
              - status
              - createdAt
        - $ref: '#/components/parameters/orderDirectionAscParam'
      responses:
        200:
          description: List of found cases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/stations/id/{stationId}/connection:
    get:
      tags:
        - Organizations Charging Stations
      summary: Get the connection chain of a Charging Station
      operationId: getOrganizationChargingStationConnection
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/stationIdParam'
      responses:
        200:
          description: 'Connection Chain for the Charging Station'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionChainItem'
        default:
          $ref: '#/components/responses/default'
  /organizations/id/{organizationId}/stations/id/{stationId}/maintenance:
    get:
      tags:
        - Organizations Charging Stations
      summary: Get all maintenance windows for a specific charging station of a given organization
      description: |
        Get all maintenance windows for a specific charging station of a given organization
        The endpoint returns an array of ChargingStationMaintenance models
      operationId: getOrganizationChargingStationMaintenance
      parameters:
        - $ref: '#/components/parameters/organizationIdParam'
        - $ref: '#/components/parameters/stationIdParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/itemsPerPageParam'
      responses:
        200:
          description: Returns all maintenance windows of a specific charging station
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingStationMaintenance'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
        default:
          $ref: '#/components/responses/default'
components:
  schemas:
    Account:
      type: object
      properties:
        account_id:
          type: string
          description: ID of the account
          example: ABCD1234
          readOnly: true
        tenant:
          type: string
          description: Tenant (EMP) of the account
          example: dewln
          readOnly: true
        email:
          type: string
          format: email
          description: Email address of the account
          example: test@example.com
        invoice_email_address:
          type: string
          format: email
          description: Additional email address to send invoices to
          example: invoices@example.com
        first_name:
          type: string
          description: First name
          example: John
        last_name:
          type: string
          description: Last name
          example: Doe
        company_name:
          type: string
          description: Company name
          example: Wirelane GmbH
        vat_number:
          type: string
          description: VAT number of the company
          example: DE999999999
        phone_number:
          type: string
          description: Phone number in +33 456789 format
          pattern: '[+]?[0-9 ]+'
          example: +33 4567 89
        address:
          $ref: '#/components/schemas/PostalAddress'
        avatar_url:
          type: string
          readOnly: true
          description: Url to the avatar image of the account
        language:
          type: string
          description: '[ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code.'
          example: en
          pattern: '^[a-z]{2}$'
        status:
          type: string
          description: State of the account
          readOnly: true
          enum:
            - ACTIVE
            - INACTIVE
            - BLOCKED
        salutation:
          type: string
          description: |
            Salutation / title
              * `Company`
              * `Male`
              * `Female`
              * `Undefined`
              * `Unknown`
              * `Local authority`
              * `unknown`: (deprecated)
              * `undefined`: (deprecated)
              * `mr`: (deprecated)
              * `mrs`: (deprecated)
              * `company`: (deprecated)
              * `local_authority`: (deprecated)
          default: Unknown
        terminationRequested:
          type: string
          format: date-time
          readOnly: true
          description: Date when the account termination was requested.
        terminationEffective:
          type: string
          format: date-time
          readOnly: true
          description: Date when the account termination will be effective.
        terminationReason:
          type: string
          readOnly: true
          description: Reason for termination of the account.
        billable:
          description: Is the account free/billable. If false then invoices will not be billed will not sent during invoice run.
          type: boolean
          default: true
          example: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: Date when the account was created.
        updated:
          type: string
          format: date-time
          readOnly: true
          description: Date when the account was updated.
        anonymized:
          description: Flag indicating if the account data has been anonymized.
          type: boolean
          readOnly: true
          example: false
        blocked_reasons:
          description: Reasons for account block
          type: array
          readOnly: true
          items:
            type: string
            enum:
              - NO_ACTIVE_SUBSCRIPTION
              - UNPAID_INVOICE
          example:
            - UNPAID_INVOICE
    Address:
      type: object
      required:
        - street
        - house_number
        - zip_code
        - city
        - country
      properties:
        id:
          description: Address ID (reference)
          type: integer
          example: 1234
          readOnly: true
        street:
          type: string
          description: Street
          example: Sample Street
        house_number:
          type: string
          description: House number
          example: 12a
        zip_code:
          type: string
          description: Zip code, e.g. "80539" for Munich (DE) or "3029 AD" for Rotterdam (NL)
          example: '80539'
        city:
          type: string
          description: City
          example: Berlin
        country:
          type: string
          description: '[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.'
          example: DE
          pattern: '^[A-Z]{2}$'
    EventLog:
      description: Event log information
      type: object
      properties:
        id:
          readOnly: true
          type: string
          example: 88292387-5212-4454-bfd1-66569d65197d
        tenant:
          readOnly: true
          type: string
          maxLength: 50
          description: Tenant
          example: dewln
        resource_id:
          readOnly: true
          type: string
          maxLength: 50
          description: Resource ID
          example: cf834a4f-2b35-4f11-8dea-d1932cdd748e
        resource_type:
          readOnly: true
          type: string
          maxLength: 50
          description: Resource type
          example: tariff
        resource_owner:
          readOnly: true
          type: string
          maxLength: 50
          description: Resource owner
          example: dewln
        correlation_id:
          readOnly: true
          type: string
          maxLength: 50
          description: Correlation ID
          example: eedfb9c0-6e38-4a6f-9ba2-de19ee911cfe
        action:
          readOnly: true
          type: string
          maxLength: 10
          description: Action
          example: update
        source:
          readOnly: true
          type: string
          maxLength: 50
          description: Source
          example: business_relation
        actor_tenant:
          readOnly: true
          type: string
          description: Actor tenant
          example: dewln
        actor_type:
          readOnly: true
          type: string
          maxLength: 20
          description: Actor type
          example: system
        actor_id:
          readOnly: true
          type: string
          maxLength: 50
          description: Actor ID
          example: DEWLNC123456789
        event_date:
          readOnly: true
          type: string
          format: date-time
          description: Event date
          example: 2015-11-25T10:43:02+0100
        event_name:
          readOnly: true
          type: string
          maxLength: 50
          description: Event name
          example: ocpp_charging_station_update
        data:
          readOnly: true
          type: string
          description: JSON encoded data
        core_data:
          readOnly: true
          type: string
          description: JSON encoded data
    Case:
      description: Representation of a Salesforce Case
      type: object
      properties:
        id:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        caseNumber:
          type: integer
          readOnly: true
        caseOwnerName:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        closedAt:
          type: string
          format: date-time
          readOnly: true
    ChargingPoint:
      type: object
      required:
        - charge_point_id
      properties:
        id:
          type: string
          description: The internal ID of the EVSE (not to be displayed). The same
            value as `charging_point_id`. This value is generated by the Wirelane
            backend when the charge point is initially submitted.
          readOnly: true
          example: 00eb08a9b45c69a4f9f14982a0095e12
        charging_point_id:
          type: string
          description: The internal ID of the EVSE (not to be displayed). The same
            value as `id`. This value is generated by the Wirelane backend when the
            charge point is initially submitted.
          readOnly: true
          example: 00eb08a9b45c69a4f9f14982a0095e12
        charging_station_id:
          type: string
          description: An optional user-defined ID to group different charging points
            into one logical station. Used for grouping in some apps.
          example: 98fd4f3a554f33c12eca9b5e2e4b369a
        charge_point_id:
          type: string
          description: The technical ID of the charge point connector. Shown to the
            user, and could be printed on the label (label code)
          example: 00eb08a9b45c69a4f9f14982a0095e12
        evseid:
          type: string
          description: The EVSE ID used for roaming.
          example: DESGDE000801
        display_id:
          type: string
          example: RED_LEFT
        owner:
          type: string
          description: The owner of the charging station.
          example: WIRELANE-2500781
        emp:
          type: string
          description: Name of the Emobility provider. [Deprecated]
          example: desgd
        cpo:
          type: string
          description: Name of the Charge Point Operator
          example: desgd
        plug_types:
          type: array
          description: Up to four types of plugs.
          example:
            - TYPE_2
            - SCHUKO
          items:
            type: string
            enum:
              - TYPE_1
              - TYPE_1_ATCH
              - TYPE_2
              - TYPE_2_ATCH
              - TYPE_3
              - TYPE_3_ATCH
              - CHADEMO
              - CCS
              - SCHUKO
              - UNKNOWN
        charging_type:
          type: string
          description: Electricity type (AC or DC)
          enum:
            - AC
            - DC
        model:
          type: string
          description: Name of the charge point model
        serial_number:
          type: string
          description: The serial number
        current:
          type: integer
          description: Current in Ampere
        power:
          type: number
          description: Power in kWh
          format: double
          example: 22.0
        voltage:
          type: integer
          description: Voltage in V
          example: 230
        reservable:
          type: boolean
          description: If this charging point supports reservations
          example: true
        authentication_types:
          type: array
          description: Authentication method for the charging point
          example:
            - card
            - remote
            - nfc_terminal
            - direct
          items:
            type: string
            enum:
              - card
              - remote
              - nfc_terminal
              - direct
        status:
          type: string
          description: |
            Status of the points. If one point in the station hits the requested status the entire station is returned.  (Comma Separated List)
              * FREE : Point is free.
              * IN_USE :  Point is used by a card (might also be reserved).
              * UNAVAILABLE : Point is unavailable right now. Might not be installed or broken.
              * UNKNOWN : The point status is unknonwn.
              * FAULTED : Point is faulted or temporary faulted.
              * RESERVED : The point is reserved.
              * CLOSED : The point status is closed (the point is not in use anymore).
          enum:
            - FREE
            - IN_USE
            - UNAVAILABLE
            - UNKNOWN
            - FAULTED
            - RESERVED
            - CLOSED
        country:
          type: string
          description: In ISO 3166-1 alpha-2
          example: DE
        city:
          type: string
          example: Schwäbisch Gmünd
        zip_code:
          type: string
          example: "73525"
        street:
          type: string
          example: Honiggasse
        house_number:
          type: string
          example: "21"
        opening_hours:
          type: string
          description: '@deprecated - use availability instead. Label describing charging
            point availability.'
          example: Mo-Fr 09:00 - 20:00
        availability:
          type: object
          description: Availability of charging point
          allOf:
            - $ref: '#/components/schemas/OpeningHours'
        timezone:
          type: string
          description: Timezone of charging point.
          example: Europe/Berlin
        service_hotline:
          type: string
          description: The telephone number of the service hotline
          example: 8.00557788E8
        longitude:
          type: number
          description: Longitude of the charging point (WGS 84)
          format: float
          example: 9.79944
        latitude:
          type: number
          description: Latitude of the charging point (WGS 84)
          format: float
          example: 48.8026
        distance:
          type: number
          description: Is returned when searching for charging points and providing
            a center
          format: float
          example: 1002.23
        creation_date:
          type: string
          description: ISO 8601
          format: date-time
          readOnly: true
        update_date:
          type: string
          description: ISO 8601
          format: date-time
          readOnly: true
        payment_url:
          type: string
          example: https://www.wirelane.com/laydepay
        charging_provider:
          type: string
          description: If the charging point is using the Wirelane backend or a delegated
            backend, use "emc".
          readOnly: true
          example: emc
        charging_group:
          type: array
          items:
            $ref: '#/components/schemas/ChargingPointGroup'
    ChargingPointGroup:
      type: object
      properties:
        id:
          type: integer
          description: The internal ID of the charging point group
          example: 1
        name:
          type: string
          description: The group name
          example: AC Chargers
        owner:
          type: string
          example: WIRELANE-2500781
    ChargingSession:
      type: object
      required:
        - customer_id
        - owner
        - emp
        - session_id
        - cpo_session_id
        - charging_point_id
      properties:
        session_id:
          type: string
          description: Internal session id
        cpo_session_id:
          type: string
          description: Charging session id of the CPO
          example: 19eea288-1ee1-5aa9-b258-38fea1df55f3
        customer_id:
          type: string
          example: WIRELANE-7900915
        customer_email:
          type: string
          format: email
          example: customer@example.com
        customer_membership_owner:
          type: string
          example: wirelane
        card_number:
          type: string
          example: WIRELANE123456
        card_short_reference:
          type: string
          example: CarXYZ
        language:
          description: '[ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code.'
          type: string
          example: de
        charging_station_id:
          type: string
          example: 98fd4f3a554f33c12eca9b5e2e4b369a
        charging_point_id:
          type: string
          example: 00eb08a9b45c69a4f9f14982a0095e12
        charge_point_id:
          type: string
          example: DESGDE000801-2
        evseid:
          type: string
          example: DESGDE000801
        owner:
          description: Charging point owner
          type: string
          example: WIRELANE-2500781
        emp:
          description: E-Mobility Service Provider
          type: string
          example: desgd
        cpo:
          description: Charging point operator
          type: string
          example: eclearing
        charging_provider:
          description: Charging point provider
          type: string
          example: wirelane
        plug_type:
          type: string
          example: TYPE_2
        charging_type:
          type: string
          enum:
            - AC
            - DC
        country:
          type: string
          description: '[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.'
          example: DE
        city:
          type: string
          example: Schwäbisch Gmünd
        zip_code:
          type: string
          example: 73525
        street:
          type: string
          example: Honiggasse
        house_number:
          type: string
          example: 21
        tariff:
          type: string
          description: The tariff name for the charging session
          example: LADEPAY_01
        tariff_text:
          type: string
          description: The description text for the tariff
        price_model:
          type: string
          description: The price model key for the charging session
          example: desgd_ladepay_01
        price_model_text:
          type: string
          description: The description text for the price model
        identification:
          type: string
          description: The identification value
          example: e6f252d6-30a0-5416-8533-126335a2ad2d
        identification_type:
          type: string
          description: The identification type
          enum:
            - access_token
            - none_access_token
            - auth_token
            - contract_id
            - customer_id
            - rfid
            - contactless_payment
            - direct_payment
            - customer_rfid
            - admin_remotestart
          example: access_token
        cpo_created:
          type: boolean
          description: True if initialized by the cpo
          example: true
        process_begin:
          type: string
          format: date-time
          description: Process start on the platform
          example: 2017-10-15T16:44:45+0200
        process_end:
          type: string
          format: date-time
          description: Process end on the platform
          example: 2017-10-15T17:53:04+0200
        transaction_begin:
          type: string
          format: date-time
          description: Begin date of the transaction delivered by CPO (ideally first interaction between car and charging point)
          example: 2017-10-15T16:44:40+0200
        transaction_end:
          type: string
          format: date-time
          description: End date of the transaction delivered by CPO (ideally last interaction between car and charging point)
          example: 2017-10-15T17:52:59+0200
        session_begin:
          type: string
          format: date-time
          description: Begin date of the charging session delivered by CPO (ideally when current started flowing)
          example: 2017-10-15T16:44:40+0200
        session_end:
          type: string
          format: date-time
          description: End date of the charging session delivered by CPO (ideally when current stopped flowing)
          example: 2017-10-15T17:52:59+0200
        transaction_duration:
          type: integer
          description: Duration of the transaction in minutes
          example: 68
        session_duration:
          type: integer
          description: Duration of the session in minutes
          example: 68
        kwh:
          type: number
          format: double
          example: 17.46
        has_signed_value:
          type: boolean
          example: true
        price:
          type: number
          format: double
          description: The charging session gross price
          example: 1.7
        tax_rate:
          type: number
          format: double
          description: The charging session tax rate
          example: 0.19
        currency:
          description: '[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.'
          type: string
          enum:
            - EUR
            - CHF
            - SEK
            - ILS
          example: EUR
        charging_session_type:
          type: string
          description: The service type provided
          deprecated: true
          enum:
            - direct_charging
            - comfort_charging
            - charging
          example: comfort_charging
        status:
          description: The charging session status
          type: string
          enum:
            - initial
            - authorization_pending
            - start_accepted
            - start_pending
            - started
            - stop_accepted
            - stop_pending
            - stopped
            - closed
            - canceled
            - error
            - error_consecutive_start
          example: closed
        charging_state:
          description: Charging status of the session
          type: string
          enum:
            - charging
            - charge_suspended
            - ending_charge
            - end_charge
        creation_date:
          type: string
          format: date-time
          description: Creation date
          example: 2017-10-15T16:44:40+0200
        update_date:
          type: string
          format: date-time
          description: Update date
          example: 2017-10-15T17:53:04+0200
        meter_start:
          type: integer
          description: Unix timestamp for meter start
          example: 1541678196
        meter_stop:
          type: integer
          description: Unix timestamp for meter stop
          example: 1541678196
        error_code:
          type: string
          description: Error code for faulty session
          example: emc_timeout
        error_message:
          type: string
          description: Error message for faulty session
          example: Manually closed because of time out
    ChargingStation:
      description: Charging Station private data
      allOf:
        - $ref: '#/components/schemas/ChargingStationInfo'
        - type: object
          properties:
            id:
              description: The internal ID
              readOnly: true
              type: integer
              example: 1337
            solution_type:
              type: string
              description: The solution type of the contract the EVSE is assigned to
              readOnly: true
              enum:
                - bmvi
                - business_solution
                - caas_acquired
                - caas_enterprise
                - caas_public
                - caas_smb
                - ghg_only
                - hardware_only
                - hardware_software
                - software_only
            onboarding:
              type: string
              readOnly: true
              description: Charging Point Onboarding status
              enum:
                - pending
                - details
                - connectors
                - ocpp
                - group
                - router
                - payment_terminal
                - done
              default: done
            onboardingCompletedAt:
              type: string
              readOnly: true
              description: Date when onboarding was completed
              format: date-time
              example: 2023-05-01T00:00:00+0200
            connectors:
              description: List of connectors assigned to that charging station
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/Connector'
            charging_site_id:
              type: string
              example: 54e7c70d-fa97-11e7-b20f-00ffa96d3a77
              description: The `ChargingSite.id` of the assigned ChargingSite
              readOnly: true
            charging_site_name:
              type: string
              description: The `ChargingSite.name` of the assigned ChargingSite
              readOnly: true
    ChargingStationInfo:
      description: Charging Station public data
      type: object
      properties:
        station_id:
          description: The identification label of the station
          readOnly: true
          type: string
          example: DE*WLN*7966
        charging_provider:
          type: string
          readOnly: true
          example: emc
          description: The charging provider. E.g. `emc` for charge points using the Wirelane OCPP backend, `hubject` for hubject roaming charge points.
        owner:
          description: The owner of the charging station.
          readOnly: true
          type: string
          example: dewln
        cpo:
          description: Name of the Charge Point Operator
          readOnly: true
          type: string
          example: dewln
        cpo_name:
          type: string
          description: Name of the CPO
          readOnly: true
          example: Wirelane GmbH
        cpo_logo:
          type: string
          description: Logo Url of the CPO
          readOnly: true
          maxLength: 255
        vendor:
          description: Name of the charge point vendor
          readOnly: true
          type: string
          example: Wirelane
        model:
          description: Name of the charge point model
          readOnly: true
          type: string
          example: Light&Charge
        address:
          $ref: '#/components/schemas/Address'
        availability:
          $ref: '#/components/schemas/OpeningHours'
        timezone:
          type: string
          readOnly: true
          description: Timezone of charging point.
          example: Europe/Berlin
        service_hotline:
          description: The telephone number of the service hotline
          type: string
          example: '0800557788'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        roaming:
          type: boolean
          description: Indicates if the charging station is directly connected to our backend or via roaming protocols.
          readOnly: true
          example: false
        accessibility:
          type: string
          enum:
            - public
            - private
        accessibility_location_type:
          description: |
            **the below table defines the possible values for the accessibility location type**
            | **Value**               | Description                                                                             |
            |-------------------------|-----------------------------------------------------------------------------------------|
            | **on-street**           | parking in public space                                                                 |
            | **parking-garage**      | multistorey car park                                                                    |
            | **underground-garage**  | multistorey car park, mainly underground                                                |
            | **parking-lot**         | a cleared area that is intended for parking vehicles, i.e. at super markets, bars, etc. |
            | **private**             | located in private or corporate grounds, may not be accessible to the public            |
            | **other**               | other then the given possibilities                                                      |
            | **unknown**             | parking location type is not known by the operator                                      |
          type: string
          enum:
            - on-street
            - parking-garage
            - underground-garage
            - parking-lot
            - private
            - other
            - unknown
        authentication_types:
          description: Authentication method for the charging point
          type: array
          items:
            type: string
            enum:
              - card
              - remote
              - nfc_terminal
              - direct
          example:
            - card
            - remote
            - nfc_terminal
            - direct
        favorite_id:
          type: string
          description: ID of the favorite record if it exists for the current API user
          readOnly: true
          example: 254c5412-0d6e-4269-ae1a-0f723d6d7ae7
        connectors:
          description: List of connectors for that charging station
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ConnectorInfo'
        energy_resource_type:
          description: |
            Energy resource type
            * `renewable`: 100% powered by renewable energy
            * `mixed`: partly powered by renewable energy and classic power sources
            * `nonrenewable`: no renewable energy in the mix
          type: string
          enum:
            - mixed
            - nonrenewable
            - renewable
    ChargingStationMaintenance:
      description: Charging Station Maintenance Window Data
      type: object
      properties:
        stationId:
          type: integer
          readOnly: true
          description: internal ID of the charging station
          example: 123
        chargingStationId:
          type: string
          readOnly: true
          description: Human readable ID of the charging station
          example: DE*WLN*7966
        start:
          type: string
          format: date-time
          readOnly: true
          description: start of the planned maintenance window (date-time)
        end:
          type: string
          format: date-time
          readOnly: true
          description: End date-time of the planned maintenance window (date-time)
        actualEnd:
          type: string
          format: date-time
          readOnly: true
          description: Actual end of the maintenance window (date-time)
    ConnectionChainItem:
      description: Connection Chain item of a Charging Station
      type: object
      properties:
        type:
          description: Item type
          type: string
          enum:
            - payment_terminal
            - station
            - router
            - cellular
            - wan
            - ocpp_server
            - roaming
          readOnly: true
        label:
          description: Label of the item
          type: string
          readOnly: true
          example: 127.0.0.1
        status:
          description: Connection status of the item
          type: string
          enum:
            - connected
            - disconnected
            - unknown
          readOnly: true
        id:
          description: Optional ID of the referenced item type
          type: string
          readOnly: true
          example: 54e7c70d-fa97-11e7-b20f-00ffa96d3a77
        tenant:
          description: Tenant ID
          readOnly: true
          type: string
          example: dewln
    Connector:
      description: ConnectorInfo Data extended with additional private data
      allOf:
        - $ref: '#/components/schemas/ConnectorInfo'
        - type: object
          properties:
            scm_id:
              type: string
              example: '0088209ebda441c9762da2f38a5f233a'
              readOnly: true
            charging_groups:
              type: array
              items:
                $ref: '#/components/schemas/ChargingPointGroup'
              readOnly: true
            dlm_role:
              description: The dlm-role of the charging point
              type: string
              readOnly: true
              example: 'secondary'
            connector_id:
              type: integer
              description: ID of the connector as seen from station
              readOnly: true
              example: 0
            asset_id:
              description: The unique asset ID of the charging point (used to associate the charging point with a Salesforce asset). This value is generated by the Wirelane backend when the charge point is initially submitted and subsequently an asset will be created in Salesforce using this unchangeable asset ID.
              readOnly: true
              type: string
              example: 00055c68-db40-4484-b11c-11a6b6ea7ea0
            current:
              description: Current in A
              type: integer
              readOnly: true
            voltage:
              description: Voltage in V
              type: integer
              readOnly: true
            serial_number:
              description: The serial number
              type: string
              readOnly: true
            public_key:
              description: The public key of the charging point
              readOnly: true
              type: string
              example: 3059301306072A8648CE3D020106082A8648CE3D03010703
            sf_asset_id:
              type: string
              description: The Salesforce ID of the charging point, that represents the "physical" point.
              readOnly: true
              example: 00055c6800055c68ab
            sf_cp_id:
              type: string
              description: The Salesforce ID of the charging point, that represents the "philosophical" point.
              readOnly: true
              example: 00055c6800055c68ab
            status_update:
              type: string
              format: date-time
              description: Date of the status update
              readOnly: true
              example: 2023-05-01T00:00:00+0200
    ConnectorInfo:
      description: Data which is specific for a single connector of a station
      type: object
      properties:
        evseid:
          description: The EVSE-ID used for roaming.
          type: string
          example: DESGDE000801
        plug_types:
          description: Up to four types of plugs.
          type: array
          items:
            type: string
            enum:
              - TYPE_1
              - TYPE_1_ATCH
              - TYPE_2
              - TYPE_2_ATCH
              - TYPE_3
              - TYPE_3_ATCH
              - CHADEMO
              - CCS
              - SCHUKO
              - UNKNOWN
          example:
            - TYPE_2
            - SCHUKO
        charging_type:
          description: Electricity type
          type: string
          enum:
            - AC
            - DC
        power:
          description: Power in kW
          type: number
          format: double
          example: 22
        status:
          type: string
          description: |
            Status of the points. If one point in the station hits the requested status the entire station is returned.
              * `FREE`: Point is free.
              * `IN_USE`: Point is occupied (user has connected a cable or swiped his card over the card reader. In case of OICP the charging might already be in progress)
              * `UNAVAILABLE`: Point is unavailable right now. Might not be installed or broken.
              * `UNKNOWN`: The point status is unknown.
              * `FAULTED`: Point is faulted or temporary faulted.
              * `RESERVED`: The point is reserved.
              * `CLOSED`: The point status is closed (the point is not in use anymore).
              * `MAINTENANCE`: The charging point is maintained.
              * `CHARGING`: Point is used, cable connected.
          enum:
            - FREE
            - IN_USE
            - UNAVAILABLE
            - UNKNOWN
            - FAULTED
            - RESERVED
            - CLOSED
            - MAINTENANCE
            - CHARGING
        payment_url:
          type: string
          example: https://www.wirelane.com/laydepay
        label_code:
          type: string
          description: unique label_code for connector
          readOnly: true
          example: DEWLNET0000102-1
    Coordinates:
      description: Coordinates
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: float
          example: 48.14510017983977
        longitude:
          type: number
          format: float
          example: 11.582424514508215
    DisplayText:
      description: Translatable text
      type: object
      properties:
        language:
          type: string
          description: '[ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code.'
          example: de
        text:
          type: string
    HttpError:
      type: object
      properties:
        error_code:
          type: string
          description: The error code describing the error
          example: validation_error
        error_message:
          type: string
          description: The human readable error message describing the error
          example: Provided data is not valid
    KeyValue:
      description: Key-value object
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Key
        value:
          type: string
          description: Value
    Member:
      type: object
      properties:
        id:
          type: string
        account:
          $ref: '#/components/schemas/Account'
        email:
          type: string
          format: email
        status:
          description: Invitation status
          type: string
          enum:
            - pending
            - active
            - revoked
            - terminated
    OpeningHours:
      type: object
      properties:
        label:
          type: string
          description: Arbitrary label to give the availability.
          example: Mon-Fr 08:00-22:00, Sat-Sun CLOSED
        open247:
          type: boolean
          description: Is available 24/7. If true, Monday - Sunday times will be ignored.
          example: false
        monday:
          type: array
          description: Start and end time pairs representing availability on Mondays.
          example:
            - - "0900"
              - "1230"
            - - "1330"
              - "0000"
          items:
            type: array
            items:
              type: string
        tuesday:
          type: array
          description: Start and end time pairs representing availability on Tuesdays.
          example:
            - - "0000"
              - "0000"
          items:
            type: array
            items:
              type: string
        wednesday:
          type: array
          description: Start and end time pairs representing availability on Wednesdays.
          example:
            - - "0900"
              - "1230"
            - - "1330"
              - "0000"
          items:
            type: array
            items:
              type: string
        thursday:
          type: array
          description: Start and end time pairs representing availability on Thursdays.
          example:
            - - "0000"
              - "0000"
          items:
            type: array
            items:
              type: string
        friday:
          type: array
          description: Start and end time pairs representing availability on Fridays.
          example:
            - - "0900"
              - "1230"
            - - "1330"
              - "1645"
            - - "1800"
              - "0000"
          items:
            type: array
            items:
              type: string
        saturday:
          type: array
          description: Start and end time pairs representing availability on Saturdays.
          example:
            - - "0000"
              - "0000"
          items:
            type: array
            items:
              type: string
        sunday:
          type: array
          description: Start and end time pairs representing availability on Sundays.
          example: []
          items:
            type: array
            items:
              type: string
        exceptionalOpenings:
          type: object
          properties: {}
          description: Start and end time pairs representing availability on specific
            dates. Dates in Y-m-d format. * can be used as year, month or day wildcards
            to represent recurring dates.
          example:
            2020-12-24:
              - - "0000"
                - "0900"
              - - "0930"
                - "1300"
            '*-12-25': []
            '*-12-26': []
    PaymentMethod:
      description: Payment method for an account
      type: object
      properties:
        id:
          type: string
          readOnly: true
          example: 54e7c70d-fa97-11e7-b20f-00ffa96d3a77
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - BLOCKED
          example: ACTIVE
          readOnly: true
        processor:
          type: string
          description: Processor of the actual payment.
          example: wirelane
          readOnly: true
        type:
          type: string
          description: Type of the payment method.
          example: visa
          readOnly: true
        label:
          type: string
          description: Label for displaying payment information.
          example: '"**** **** **** 1234" or "john.doe@example.com"'
          readOnly: true
        expires:
          type: string
          description: Year & month of expiry, if applies.
          example: 2028-12
          readOnly: true
        is_useable:
          type: boolean
          description: Indicates if the payment method can be used for payments.
          example: true
          readOnly: true
        is_expired:
          type: boolean
          description: Indicates if the payment method should be replaced with a new one.
          example: false
          readOnly: true
        metadata:
          type: array
          description: Metadata provided by the payment method type.
          readOnly: true
          items:
            $ref: '#/components/schemas/KeyValue'
    Plan:
      description: Plan model
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        plan_key:
          type: string
          description: Used as reference for the customer (on invoice for example)
          example: wirelane_public_ac_01
        name:
          type: string
          example: Wirelane Large
        amount:
          type: integer
          description: Amount to be billed (in cent of the currency)
          example: 100
        currency:
          description: '[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.'
          type: string
          enum:
            - EUR
            - CHF
            - SEK
            - ILS
          example: EUR
        interval_type:
          type: string
          enum:
            - SECONDS
            - MINUTES
            - DAYS
            - WEEKS
            - MONTHS
          description: The billing interval (period interval)
        interval_count:
          type: integer
          example: 1
          description: Cardinality of the interval type (for example 5 MINUTES)
        properties:
          type: object
          example: { "seats": 5 }
          description: JSON properties object
        plan_group:
          type: string
          description: Can be used as selector for frontends
          enum:
            - PUBLIC
            - PRIVATE
          example: PUBLIC
        default_tax_rate:
          type: number
          format: double
          example: 19.0
          description: The tax rate to be applied
          default: 19.0
        tax_rate_invoice_text:
          type: array
          items:
            $ref: '#/components/schemas/DisplayText'
        seat_active_min:
          type: integer
          description: Minimum amount of cards there must to order for this plan
          example: 3
        amount_seat_order:
          type: integer
          example: 1200
          description: Cost of a seat order for a single seat (in euro cent)
        amount_seat_recurrent:
          type: integer
          example: 1200
          description: recurrent seat cost (in euro cent)
        activation_date:
          type: string
          format: date-time
          description: Activation date
          example: 2015-11-25T10:43:02+0100
        deactivation_date:
          type: string
          format: date-time
          description: Deactivation date
          example: 2017-10-25T06:55:44+0200
        termination_date:
          type: string
          format: date-time
          description: If set, then this plan has been terminated and no subscriptions will be extended after this date.
          example: 2027-07-25T00:00:00+0200
        service_levels:
          type: array
          items:
            $ref: '#/components/schemas/PlanServiceLevel'
        unlock_code:
          type: string
          pattern: '^[a-zA-Z0-9-_*.,;!@$]+$'
          maxLength: 20
          example: -Y0u_;et_@_d!$,Ou*t.
        subscription_count:
          type: integer
          description: Subscription count of a plan.
          default: 0
    PlanServiceLevel:
      description: Service level
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: The service level id
        key:
          type: string
          example: dewln_ac_01
          description: The key of the service level
        title:
          type: string
          example: Tariff for wirelane ac charging
          description: The service level title
        description:
          type: string
          example: 0,39 € per kWh + 0,03 € per Minute
          description: The service level description
        tariff:
          type: string
          example: DEWLN_AC_01
          description: The key of the tariff there is related to the service level
    PostalAddress:
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            name:
              type: string
              description: 'Name / address line #1, e.g. "John Doe" or "My Company"'
              example: John Doe
            description:
              type: string
              description: 'Description / address line #2, e.g. "Rear building" or "Finance Department"'
              example: Rear building
    Subscription:
      type: object
      properties:
        id:
          type: string
          example: 3073b46e-1e17-4d9d-8485-1ebd9424f6b7
        upcoming_subscription:
          $ref: '#/components/schemas/UpcomingSubscription'
        current_period:
          $ref: '#/components/schemas/SubscriptionPeriod'
        plan_key:
          type: string
          example: WIRELANE-ABO-ANNUEL-3
        begin:
          type: string
          format: date-time
          description: Begin date
          example: 2015-11-25T10:43:02+0100
        end:
          type: string
          format: date-time
          description: End date
          example: 2015-11-25T10:43:02+0100
        account_id:
          type: string
          description: Id of the account
          example: ABCD1234
          readOnly: true
    SubscriptionPeriod:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        currency:
          description: '[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.'
          type: string
          enum:
            - EUR
            - CHF
            - SEK
            - ILS
          example: EUR
        amount:
          type: number
        uid:
          type: string
          example: 3073b46e-1e17-4d9d-8485-1ebd9424f6b7
        begin:
          type: string
          format: date-time
          description: Begin date
          example: 2015-11-25T10:43:02+0100
        end:
          type: string
          format: date-time
          description: End date
          example: 2015-11-25T10:43:02+0100
        quantity:
          type: integer
          default: 1
          example: 1
        tax_rate:
          type: number
          format: double
          example: 19.0
    UpcomingSubscription:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        quantity:
          type: integer
        tax_rate:
          type: number
          format: double
  responses:
    default:
      description: Default response object error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
  parameters:
    accountIdParam:
      name: accountId
      in: path
      description: Account ID
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9-_]+$'
        example: DEWLN-0123456789
    organizationIdParam:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_]+$
        type: string
        example: DEMOTENANT
    latParam:
      name: lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    lonParam:
      name: lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    sortLatParam:
      name: sort_lat
      in: query
      description: Latitude for sortable
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    sortLonParam:
      name: sort_lon
      in: query
      description: Longitude for sortable
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    distanceParam:
      name: distance
      in: query
      description: Search distance in meters
      schema:
        pattern: ^[0-9]*$
        type: string
    southWestLat:
      name: south_west_lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    southWestLon:
      name: south_west_lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    northEastLat:
      name: north_east_lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    northEastLon:
      name: north_east_lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    pointTypeIdParam:
      name: pointTypeId
      in: path
      description: |
        Sets which field of ChargingPoint the `pointId` parameters refers to:
          * `id` / `charging_point_id`: The internal ID of the EVSE
          * `evseid`: The Roaming EVSE ID
          * `charge_point_id`: The technical ID of the charge point connector. Shown to the user, and could be printed on the label (label code)
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_]+$
        type: string
        enum:
          - id
          - evseid
          - charging_point_id
          - charge_point_id
    pointIdParam:
      name: pointId
      in: path
      description: The ID to search for. Note that not all characters indicated by
        the pattern are allowed for each type of ID; e.g., the asterisk is only allowed
        if an EVSE ID is provided.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_*]+$
        type: string
    searchStringSpecialCharactersParam:
      name: search
      in: query
      description: Context search string
      schema:
        pattern: ^[a-zA-ZÀ-ÿ0-9-_*.,\x27\x20]+$
        type: string
    pointGroupsSearchParam:
      name: point_groups
      in: query
      description: Search for specific point groups
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: ^[0-9]+$
          type: string
    pointOrderByParam:
      name: order_by
      in: query
      description: Name for sort
      schema:
        type: string
        enum:
          - evseid
          - status
          - latitude
          - longitude
          - power
          - voltage
          - chargingType
          - plugType
          - country
          - city
          - zipCode
          - creationDate
          - updateDate
          - distance
    orderDirectionParam:
      name: order_direction
      in: query
      description: Key for order direction
      schema:
        type: string
        enum:
          - asc
          - desc
          - ""
    orderDirectionAscParam:
      name: order_direction
      in: query
      description: Key for order direction
      required: false
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
    orderDirectionDescParam:
      name: order_direction
      in: query
      description: Key for order direction
      required: false
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
    evseidListParam:
      name: evseid
      in: query
      description: Filter by list of evseids
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    ownerIdListParam:
      name: owner_id
      in: query
      description: Filter by list of owner_id
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    notInPointGroupsParam:
      name: not_in_point_groups
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    pointGroupsParam:
      name: point_groups
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    chargingStationIdListParam:
      name: charging_station_id
      in: query
      description: Filter by list of charging station id's
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    pageNumberParam:
      name: page
      in: query
      description: Number of current page
      schema:
        type: integer
        default: 1
    itemsPerPageParam:
      name: page_size
      in: query
      description: Number of items per page
      schema:
        type: integer
        default: 50
        minimum: 1
        maximum: 1000000
    infrastructureOnlyParam:
      name: infrastructure_only
      in: query
      description: To exchange only infrastructure specific data
      schema:
        pattern: ^[0-1]{1}$
        type: string
    reservableOnlyParam:
      name: reservable
      in: query
      description: To exchange only reservable points
      schema:
        pattern: ^[0-1]{1}$
        type: string
    chargingTypeParam:
      name: charging_type
      in: query
      description: |
        The charging type. (Comma Separated List)
          * AC
          * DC
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - AC
            - DC
            - ""
    pointStatusParam:
      name: status
      in: query
      description: |
        Status of the points. If one point in the station hits the requested status the entire station is returned.  (Comma Separated List)
          * FREE : Point is free.
          * IN_USE :  Point is used by a card (might also be reserved).
          * UNAVAILABLE : Point is unavailable right now. Might not be installed or broken.
          * UNKNOWN : The point status is unknonwn.
          * FAULTED : Point is faulted or temporary faulted.
          * RESERVED : The point is reserved.
          * CLOSED : The point status is closed (the point is not in use anymore).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    plugTypesParameter:
      name: plug_types
      in: query
      description: |
        The plug types. (Comma Separated List)
          * TYPE_1
          * TYPE_1_ATCH : With cable attached
          * TYPE_2
          * TYPE_2_ATCH : With cable attached
          * TYPE_3
          * TYPE_3_ATCH : With cable attached
          * CHADEMO
          * CCS
          * SCHUKO
          * UNKNOWN
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - TYPE_1
            - TYPE_1_ATCH
            - TYPE_2
            - TYPE_2_ATCH
            - TYPE_3
            - TYPE_3_ATCH
            - CHADEMO
            - CCS
            - SCHUKO
            - UNKNOWN
            - ""
    authTypesParameter:
      name: auth_type
      in: query
      description: |
        The charging station authorization type. (Comma Separated List)
          * card
          * remote
          * direct
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - card
            - remote
            - direct
            - ""
    maxPowerParam:
      name: max_power
      in: query
      description: |
        The charging speed. Greater than 0
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    searchStringParam:
      name: search
      in: query
      description: Search term
      schema:
        type: string
    chargingPointIdParam:
      name: charging_point_id
      in: query
      description: Charging Point ID
      schema:
        type: string
        pattern: "^[a-zA-Z0-9-_*+]+$"
    chargingSessionStatusParam:
      name: status
      in: query
      description: |
        The charging session status to search for:
          * initial
          * authorization_pending
          * start_accepted
          * start_pending
          * started
          * stop_accepted
          * stop_pending
          * stopped
          * closed
          * canceled
          * error
          * error_consecutive_start
          * ''
      schema:
        type: array
        items:
          type: string
    datePickerSinceParam:
      name: date_picker_since
      in: query
      description: The date time to search from
      schema:
        type: string
        pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})[\040+-](\d{4})$'
        format: date-time
    datePickerUntilParam:
      name: date_picker_until
      in: query
      description: The date time to search to
      schema:
        type: string
        pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})[\040+-](\d{4})$'
        format: date-time
    sessionOrderByParam:
      name: order_by
      in: query
      description: Name for sort
      schema:
        type: string
        enum:
          - sessionId
          - emp
          - ownerId
          - chargingStationId
          - pointScmId
          - evseid
          - status
          - sessionBegin
          - sessionEnd
          - tariff
          - price
          - kwh
          - chargingSessionType
          - chargingType
          - plugType
          - country
          - city
          - zipCode
          - creationDate
          - updateDate
    organizationTypeParam:
      name: organization_type
      in: query
      description: Type of the organization
      schema:
        type: array
        items:
          type: string
          enum:
            - emp
            - cpo
            - owner
            - ''
    chargePointIdListParam:
      name: charge_point_id
      in: query
      description: Filter by list of charge_point_id
      schema:
        type: array
        items:
          type: string
    sessionIdParam:
      name: sessionId
      in: path
      description: The ID to search for
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9-_]+$'
    stationIdParam:
      name: stationId
      in: path
      description: |
        The ID to search for.
      required: true
      schema:
        type: integer
    powerRangeParameter:
      name: power_range
      in: query
      description: The charging speed, as minimum to maximum (e.g. `22-300` for 22 to 300 kW).
      required: false
      schema:
        type: string
        pattern: '^[0-9]{1,3}-[0-9]{1,3}$'
  headers:
    X-Total-Count:
      description: Total number of items
      schema:
        type: integer
    X-Total-Pages:
      description: Total number of pages
      schema:
        type: integer
  requestBodies:
    ChargingPointRequest:
      description: Create a charging point
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChargingPoint'
      required: true
  securitySchemes:
    OAuth2Password:
      type: oauth2
      flows:
        password:
          tokenUrl: https://oauth.emobilitycloud-staging.com/token
          refreshUrl: https://oauth.emobilitycloud-staging.com/token
          scopes:
            admin: All admin functions the user has access to
    OAuth2ClientCredential:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth.emobilitycloud-staging.com/token
          scopes:
            account: Account registration
            domains: Domain lookup
            pois_search: POI search
x-webhooks:
  organization-event:
    post:
      tags:
        - Webhooks
      summary: Forwards an organization event to the defined callback.
      operationId: organization-event
      requestBody:
        $ref: '#/components/schemas/EventLog'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received successfully
