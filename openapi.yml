openapi: 3.0.1
info:
  title: Wirelane API
  description: |
    ## Basic information

    To use this API, a `client_id` and `client_secret` is needed. Please contact our support to receive one for your app.

    There are two kinds of endpoints: endpoints that are accessible without having an user account on the Wirelane platform, and endpoints that are accessible without. Both need a client_id and client_secret.

    ## Authenticated endpoints

    Retrieving a JWT access token on staging:
    ```
    POST https://oauth-staging.emobilitycloud.com/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    grant_type=password&client_id=...&client_secret=...&username=...&password=...&scope=account_admin
    ```
    Retrieving a JWT access token on production:
    ```
    POST https://oauth.emobilitycloud.com/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    grant_type=password&client_id=...&client_secret=...&username=...&password=...&scope=account_admin
    ```
    From the returned JSON, take the value of `access_token` and use it in the API request as follows:
    ```
    GET https://api.wirelane.com/apis/emc/organizations/id/dewln/points?page=1&page_size=50
    Accept: application/json
    Authorization: Bearer eyJ0...
    ```

    ## Unauthenticated endpoints

    Retrieving a JWT access token on staging:
    ```
    POST https://oauth-staging.emobilitycloud.com/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    client_id=...&client_secret=...&grant_type=client_credentials&scope=account
    ```
    Retrieving a JWT access token on production:
    ```
    POST https://oauth.emobilitycloud.com/token
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json

    client_id=...&client_secret=...&grant_type=client_credentials&scope=account
    ```
    From the returned JSON, take the value of `access_token` and use it in the API request.

    ## Host names for the endpoints

    Host names for the API
    - Staging: api-staging.wirelane.com
    - Production: api.wirelane.com
  contact:
    name: Wirelane GmbH
    url: https://www.wirelane.com
    email: support@wirelane.com
  version: "2.0"
  x-logo:
    url: "https://avatars.githubusercontent.com/u/32132867?s=200&amp;v=4"
    backgroundColor: "#000"
    altText: "Wirelane"
servers:
- url: https://api-staging.wirelane.com/apis/emc
security:
- OAuth2Password:
  - account_admin
tags:
- name: models
  description: |
    ## ChargingPoint
    <SchemaDefinition schemaRef="#/components/schemas/ChargingPoint" />
  x-displayName: Models
paths:
  /organizations/id/{organizationId}/points:
    get:
      tags:
      - Organizations Charge Points
      summary: Get organization charge points
      description: |
        Finding charging points for the account.
      operationId: organizationFindChargingPoints
      parameters:
      - name: organizationId
        in: path
        description: Organization ID
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
      - name: page
        in: query
        description: Number of current page
        schema:
          pattern: ^[0-9]*$
          type: string
          default: "1"
      - name: page_size
        in: query
        description: Number of items per page
        schema:
          pattern: ^[0-9]*$
          type: string
          default: "50"
      - name: search
        in: query
        description: Context search string
        schema:
          pattern: ^[a-zA-ZÀ-ÿ0-9-_*.,\x27\x20]+$
          type: string
      - name: order_by
        in: query
        description: Name for sort
        schema:
          type: string
          enum:
          - evseid
          - status
          - latitude
          - longitude
          - power
          - voltage
          - chargingType
          - plugType
          - country
          - city
          - zipCode
          - creationDate
          - updateDate
          - distance
      - name: order_direction
        in: query
        description: Key for order direction
        schema:
          type: string
          enum:
          - asc
          - desc
          - ""
      - name: lat
        in: query
        description: Latitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: lon
        in: query
        description: Longitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: distance
        in: query
        description: Search distance in meters
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: south_west_lat
        in: query
        description: Latitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: south_west_lon
        in: query
        description: Longitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: north_east_lat
        in: query
        description: Latitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: north_east_lon
        in: query
        description: Longitude
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: plug_types
        in: query
        description: |
          The plug types. (Comma Separated List)
            * TYPE_1
            * TYPE_1_ATCH : With cable attached
            * TYPE_2
            * TYPE_2_ATCH : With cable attached
            * TYPE_3
            * TYPE_3_ATCH : With cable attached
            * CHADEMO
            * CCS
            * SCHUKO
            * UNKNOWN
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - TYPE_1
            - TYPE_1_ATCH
            - TYPE_2
            - TYPE_2_ATCH
            - TYPE_3
            - TYPE_3_ATCH
            - CHADEMO
            - CCS
            - SCHUKO
            - UNKNOWN
            - ""
      - name: status
        in: query
        description: |
          Status of the points. If one point in the station hits the requested status the entire station is returned.  (Comma Separated List)
            * FREE : Point is free.
            * IN_USE :  Point is used by a card (might also be reserved).
            * UNAVAILABLE : Point is unavailable right now. Might not be installed or broken.
            * UNKNOWN : The point status is unknonwn.
            * FAULTED : Point is faulted or temporary faulted.
            * RESERVED : The point is reserved.
            * CLOSED : The point status is closed (the point is not in use anymore).
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: charging_type
        in: query
        description: |
          The charging type. (Comma Separated List)
            * AC
            * DC
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - AC
            - DC
            - ""
      - name: auth_type
        in: query
        description: |
          The charging station authorization type. (Comma Separated List)
            * card
            * remote
            * direct
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - card
            - remote
            - direct
            - ""
      - name: max_power
        in: query
        description: |
          The charging speed. Greater than 0
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: infrastructure_only
        in: query
        description: To exchange only infrastructure specific data
        schema:
          pattern: ^[0-1]{1}$
          type: string
      - name: point_groups
        in: query
        description: Search for specific point groups
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: ^[0-9]+$
            type: string
      - name: evseid
        in: query
        description: Filter by list of evseids
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort_lat
        in: query
        description: Latitude for sortable
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: sort_lon
        in: query
        description: Longitude for sortable
        schema:
          pattern: ^[-+]?[0-9]*.?[0-9]+$
          type: string
      - name: reservable
        in: query
        description: To exchange only reservable points
        schema:
          pattern: ^[0-1]{1}$
          type: string
      - name: charging_station_id
        in: query
        description: Filter by list of charging station id's
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: owner_id
        in: query
        description: Filter by list of owner_id
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: not_in_point_groups
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: List of found charging points
          headers:
            X-Total-Count:
              description: Total number of items
              schema:
                type: integer
            X-Total-Pages:
              description: Total number of pages
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingPoint'
        400:
          description: Bad Request - Request is somehow wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        401:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        403:
          description: Forbidden - The API token is not authorized to perform this
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        404:
          description: Not Found - The resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        406:
          description: Not Acceptable - The format is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        429:
          description: Too Many Requests - API usage exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        500:
          description: Internal Server Error - Problem with the server. Try again
            later or report it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        503:
          description: Service Unavailable - Temporarily offline for maintenance.
            Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        default:
          description: Default response object error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
    post:
      tags:
      - Organizations Charge Points
      summary: Create organization charge point
      description: Create a charging point for the provider of the organization.
      operationId: organizationCreateChargingPoint
      parameters:
      - name: organizationId
        in: path
        description: Organization ID
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
      requestBody:
        description: Create a charging point
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingPoint'
        required: true
      responses:
        200:
          description: Created. Returns created charging point
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingPoint'
        400:
          description: Bad Request - Request is somehow wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        401:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        404:
          description: Not Found - The resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        500:
          description: Internal Server Error - Problem with the server. Try again
            later or report it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      x-codegen-request-body-name: charging_point
  /organizations/id/{organizationId}/points/{pointTypeId}/{pointId}:
    get:
      tags:
      - Organizations Charge Points
      summary: Get one point from organization
      description: |
        Get a single charging point by their charging point evseId
      operationId: organizationFindChargingPoint
      parameters:
      - name: organizationId
        in: path
        description: Organization ID
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
      - name: pointTypeId
        in: path
        description: |
          Sets which field of ChargingPoint the `pointId` parameters refers to:
            * `id` / `charging_point_id`: The internal ID of the EVSE
            * `evseid`: The Roaming EVSE ID
            * `charge_point_id`: The technical ID of the charge point connector. Shown to the user, and could be printed on the label (label code)
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
          enum:
          - id
          - evseid
          - charging_point_id
          - charge_point_id
      - name: pointId
        in: path
        description: The ID to search for. Note that not all characters indicated
          by the pattern are allowed for each type of ID; e.g., the asterisk is only
          allowed if an EVSE ID is provided.
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_*]+$
          type: string
      responses:
        200:
          description: |
            Charge point found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingPoint'
        400:
          description: Bad Request - Request is somehow wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        401:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        403:
          description: Forbidden - The API token is not authorized to perform this
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        404:
          description: Not Found - The resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        406:
          description: Not Acceptable - The format is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        429:
          description: Too Many Requests - API usage exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        500:
          description: Internal Server Error - Problem with the server. Try again
            later or report it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        503:
          description: Service Unavailable - Temporarily offline for maintenance.
            Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        default:
          description: Default response object error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
    put:
      tags:
      - Organizations Charge Points
      summary: Update organization charge point
      description: Update a charging point for the provider of the organization.
      operationId: organizationUpdateChargingPoint
      parameters:
      - name: organizationId
        in: path
        description: Organization ID
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
      - name: pointTypeId
        in: path
        description: |
          Sets which field of ChargingPoint the `pointId` parameters refers to:
            * `id` / `charging_point_id`: The internal ID of the EVSE
            * `evseid`: The Roaming EVSE ID
            * `charge_point_id`: The technical ID of the charge point connector. Shown to the user, and could be printed on the label (label code)
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_]+$
          type: string
          enum:
          - id
          - evseid
          - charging_point_id
          - charge_point_id
      - name: pointId
        in: path
        description: The ID to search for. Note that not all characters indicated
          by the pattern are allowed for each type of ID; e.g., the asterisk is only
          allowed if an EVSE ID is provided.
        required: true
        schema:
          pattern: ^[a-zA-Z0-9-_*]+$
          type: string
      requestBody:
        description: Create a charging point
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingPoint'
        required: true
      responses:
        200:
          description: Updated. Returns updated charging point
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingPoint'
        400:
          description: Bad Request - Request is somehow wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        401:
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        404:
          description: Not Found - The resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        500:
          description: Internal Server Error - Problem with the server. Try again
            later or report it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      x-codegen-request-body-name: charging_point
components:
  schemas:
    OpeningHours:
      type: object
      properties:
        label:
          type: string
          description: Arbitrary label to give the availability.
          example: Mon-Fr 08:00-22:00, Sat-Sun CLOSED
        open247:
          type: boolean
          description: Is available 24/7. If true, Monday - Sunday times will be ignored.
          example: false
        monday:
          type: array
          description: Start and end time pairs representing availability on Mondays.
          example:
          - - "0900"
            - "1230"
          - - "1330"
            - "0000"
          items:
            type: array
            items:
              type: string
        tuesday:
          type: array
          description: Start and end time pairs representing availability on Tuesdays.
          example:
          - - "0000"
            - "0000"
          items:
            type: array
            items:
              type: string
        wednesday:
          type: array
          description: Start and end time pairs representing availability on Wednesdays.
          example:
          - - "0900"
            - "1230"
          - - "1330"
            - "0000"
          items:
            type: array
            items:
              type: string
        thursday:
          type: array
          description: Start and end time pairs representing availability on Thursdays.
          example:
          - - "0000"
            - "0000"
          items:
            type: array
            items:
              type: string
        friday:
          type: array
          description: Start and end time pairs representing availability on Fridays.
          example:
          - - "0900"
            - "1230"
          - - "1330"
            - "1645"
          - - "1800"
            - "0000"
          items:
            type: array
            items:
              type: string
        saturday:
          type: array
          description: Start and end time pairs representing availability on Saturdays.
          example:
          - - "0000"
            - "0000"
          items:
            type: array
            items:
              type: string
        sunday:
          type: array
          description: Start and end time pairs representing availability on Sundays.
          example: []
          items:
            type: array
            items:
              type: string
        exceptionalOpenings:
          type: object
          properties: {}
          description: Start and end time pairs representing availability on specific
            dates. Dates in Y-m-d format. * can be used as year, month or day wildcards
            to represent recurring dates.
          example:
            2020-12-24:
            - - "0000"
              - "0900"
            - - "0930"
              - "1300"
            '*-12-25': []
            '*-12-26': []
    HttpError:
      type: object
      properties:
        error_code:
          type: string
          description: The error code describing the error
          example: validation_error
        error_message:
          type: string
          description: The human readable error message describing the error
          example: Provided data is not valid
    ChargingPointGroup:
      type: object
      properties:
        id:
          type: integer
          description: The internal ID of the charging point group
          example: 1
        name:
          type: string
          description: The group name
          example: AC Chargers
        owner:
          type: string
          example: WIRELANE-2500781
    ChargingPoint:
      required:
      - charge_point_id
      type: object
      properties:
        id:
          type: string
          description: The internal ID of the EVSE (not to be displayed). The same
            value as `charging_point_id`. This value is generated by the Wirelane
            backend when the charge point is initially submitted.
          readOnly: true
          example: 00eb08a9b45c69a4f9f14982a0095e12
        charging_point_id:
          type: string
          description: The internal ID of the EVSE (not to be displayed). The same
            value as `id`. This value is generated by the Wirelane backend when the
            charge point is initially submitted.
          readOnly: true
          example: 00eb08a9b45c69a4f9f14982a0095e12
        charging_station_id:
          type: string
          description: An optional user-defined ID to group different charging points
            into one logical station. Used for grouping in some apps.
          example: 98fd4f3a554f33c12eca9b5e2e4b369a
        charge_point_id:
          type: string
          description: The technical ID of the charge point connector. Shown to the
            user, and could be printed on the label (label code)
          example: 00eb08a9b45c69a4f9f14982a0095e12
        evseid:
          type: string
          description: The EVSE ID used for roaming.
          example: DESGDE000801
        display_id:
          type: string
          example: RED_LEFT
        owner:
          type: string
          description: The owner of the charging station.
          example: WIRELANE-2500781
        emp:
          type: string
          description: Name of the Emobility provider. [Deprecated]
          example: desgd
        cpo:
          type: string
          description: Name of the Charge Point Operator
          example: desgd
        plug_types:
          type: array
          description: Up to four types of plugs.
          example:
          - TYPE_2
          - SCHUKO
          items:
            type: string
            enum:
            - TYPE_1
            - TYPE_1_ATCH
            - TYPE_2
            - TYPE_2_ATCH
            - TYPE_3
            - TYPE_3_ATCH
            - CHADEMO
            - CCS
            - SCHUKO
            - UNKNOWN
        charging_type:
          type: string
          description: Electricity type (AC or DC)
          enum:
          - AC
          - DC
        model:
          type: string
          description: Name of the charge point model
        serial_number:
          type: string
          description: The serial number
        current:
          type: integer
          description: Current in Ampere
        power:
          type: number
          description: Power in kWh
          format: double
          example: 22.0
        voltage:
          type: integer
          description: Voltage in V
          example: 230
        reservable:
          type: boolean
          description: If this charging point supports reservations
          example: true
        authentication_types:
          type: array
          description: Authentication method for the charging point
          example:
          - card
          - remote
          - nfc_terminal
          - direct
          items:
            type: string
            enum:
            - card
            - remote
            - nfc_terminal
            - direct
        status:
          type: string
          description: |
            Status of the points. If one point in the station hits the requested status the entire station is returned.  (Comma Separated List)
              * FREE : Point is free.
              * IN_USE :  Point is used by a card (might also be reserved).
              * UNAVAILABLE : Point is unavailable right now. Might not be installed or broken.
              * UNKNOWN : The point status is unknonwn.
              * FAULTED : Point is faulted or temporary faulted.
              * RESERVED : The point is reserved.
              * CLOSED : The point status is closed (the point is not in use anymore).
          enum:
          - FREE
          - IN_USE
          - UNAVAILABLE
          - UNKNOWN
          - FAULTED
          - RESERVED
          - CLOSED
        country:
          type: string
          description: In ISO 3166-1 alpha-2
          example: DE
        city:
          type: string
          example: Schwäbisch Gmünd
        zip_code:
          type: string
          example: "73525"
        street:
          type: string
          example: Honiggasse
        house_number:
          type: string
          example: "21"
        opening_hours:
          type: string
          description: '@deprecated - use availability instead. Label describing charging
            point availability.'
          example: Mo-Fr 09:00 - 20:00
        availability:
          type: object
          description: Availability of charging point
          allOf:
          - $ref: '#/components/schemas/OpeningHours'
        timezone:
          type: string
          description: Timezone of charging point.
          example: Europe/Berlin
        service_hotline:
          type: string
          description: The telephone number of the service hotline
          example: 8.00557788E8
        longitude:
          type: number
          description: Longitude of the charging point (WGS 84)
          format: float
          example: 9.79944
        latitude:
          type: number
          description: Latitude of the charging point (WGS 84)
          format: float
          example: 48.8026
        distance:
          type: number
          description: Is returned when searching for charging points and providing
            a center
          format: float
          example: 1002.23
        creation_date:
          type: string
          description: ISO 8601
          format: date-time
          readOnly: true
        update_date:
          type: string
          description: ISO 8601
          format: date-time
          readOnly: true
        payment_url:
          type: string
          example: https://www.wirelane.com/laydepay
        charging_provider:
          type: string
          description: If the charging point is using the Wirelane backend or a delegated
            backend, use "emc".
          readOnly: true
          example: emc
        charging_group:
          type: array
          items:
            $ref: '#/components/schemas/ChargingPointGroup'
  responses:
    400:
      description: Bad Request - Request is somehow wrong
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    401:
      description: User not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    403:
      description: Forbidden - The API token is not authorized to perform this request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    404:
      description: Not Found - The resource could not be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    406:
      description: Not Acceptable - The format is not supported
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    429:
      description: Too Many Requests - API usage exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    500:
      description: Internal Server Error - Problem with the server. Try again later
        or report it.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    503:
      description: Service Unavailable - Temporarily offline for maintenance. Please
        try again later.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
    default:
      description: Default response object error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpError'
  parameters:
    organizationIdParam:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_]+$
        type: string
    latParam:
      name: lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    lonParam:
      name: lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    sortLatParam:
      name: sort_lat
      in: query
      description: Latitude for sortable
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    sortLonParam:
      name: sort_lon
      in: query
      description: Longitude for sortable
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    distanceParam:
      name: distance
      in: query
      description: Search distance in meters
      schema:
        pattern: ^[0-9]*$
        type: string
    southWestLat:
      name: south_west_lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    southWestLon:
      name: south_west_lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    northEastLat:
      name: north_east_lat
      in: query
      description: Latitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    northEastLon:
      name: north_east_lon
      in: query
      description: Longitude
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
    pointTypeIdParam:
      name: pointTypeId
      in: path
      description: |
        Sets which field of ChargingPoint the `pointId` parameters refers to:
          * `id` / `charging_point_id`: The internal ID of the EVSE
          * `evseid`: The Roaming EVSE ID
          * `charge_point_id`: The technical ID of the charge point connector. Shown to the user, and could be printed on the label (label code)
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_]+$
        type: string
        enum:
        - id
        - evseid
        - charging_point_id
        - charge_point_id
    pointIdParam:
      name: pointId
      in: path
      description: The ID to search for. Note that not all characters indicated by
        the pattern are allowed for each type of ID; e.g., the asterisk is only allowed
        if an EVSE ID is provided.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9-_*]+$
        type: string
    searchStringSpecialCharactersParam:
      name: search
      in: query
      description: Context search string
      schema:
        pattern: ^[a-zA-ZÀ-ÿ0-9-_*.,\x27\x20]+$
        type: string
    pointGroupsSearchParam:
      name: point_groups
      in: query
      description: Search for specific point groups
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: ^[0-9]+$
          type: string
    pointOrderByParam:
      name: order_by
      in: query
      description: Name for sort
      schema:
        type: string
        enum:
        - evseid
        - status
        - latitude
        - longitude
        - power
        - voltage
        - chargingType
        - plugType
        - country
        - city
        - zipCode
        - creationDate
        - updateDate
        - distance
    orderDirectionParam:
      name: order_direction
      in: query
      description: Key for order direction
      schema:
        type: string
        enum:
        - asc
        - desc
        - ""
    evseidListParam:
      name: evseid
      in: query
      description: Filter by list of evseids
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    ownerIdListParam:
      name: owner_id
      in: query
      description: Filter by list of owner_id
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    notInPointGroupsParam:
      name: not_in_point_groups
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    pointGroupsParam:
      name: point_groups
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    chargingStationIdListParam:
      name: charging_station_id
      in: query
      description: Filter by list of charging station id's
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    pageNumberParam:
      name: page
      in: query
      description: Number of current page
      schema:
        pattern: ^[0-9]*$
        type: string
        default: "1"
    itemsPerPageParam:
      name: page_size
      in: query
      description: Number of items per page
      schema:
        pattern: ^[0-9]*$
        type: string
        default: "50"
    infrastructureOnlyParam:
      name: infrastructure_only
      in: query
      description: To exchange only infrastructure specific data
      schema:
        pattern: ^[0-1]{1}$
        type: string
    reservableOnlyParam:
      name: reservable
      in: query
      description: To exchange only reservable points
      schema:
        pattern: ^[0-1]{1}$
        type: string
    chargingTypeParam:
      name: charging_type
      in: query
      description: |
        The charging type. (Comma Separated List)
          * AC
          * DC
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - AC
          - DC
          - ""
    pointStatusParam:
      name: status
      in: query
      description: |
        Status of the points. If one point in the station hits the requested status the entire station is returned.  (Comma Separated List)
          * FREE : Point is free.
          * IN_USE :  Point is used by a card (might also be reserved).
          * UNAVAILABLE : Point is unavailable right now. Might not be installed or broken.
          * UNKNOWN : The point status is unknonwn.
          * FAULTED : Point is faulted or temporary faulted.
          * RESERVED : The point is reserved.
          * CLOSED : The point status is closed (the point is not in use anymore).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    plugTypesParameter:
      name: plug_types
      in: query
      description: |
        The plug types. (Comma Separated List)
          * TYPE_1
          * TYPE_1_ATCH : With cable attached
          * TYPE_2
          * TYPE_2_ATCH : With cable attached
          * TYPE_3
          * TYPE_3_ATCH : With cable attached
          * CHADEMO
          * CCS
          * SCHUKO
          * UNKNOWN
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - TYPE_1
          - TYPE_1_ATCH
          - TYPE_2
          - TYPE_2_ATCH
          - TYPE_3
          - TYPE_3_ATCH
          - CHADEMO
          - CCS
          - SCHUKO
          - UNKNOWN
          - ""
    authTypesParameter:
      name: auth_type
      in: query
      description: |
        The charging station authorization type. (Comma Separated List)
          * card
          * remote
          * direct
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - card
          - remote
          - direct
          - ""
    maxPowerParam:
      name: max_power
      in: query
      description: |
        The charging speed. Greater than 0
      schema:
        pattern: ^[-+]?[0-9]*.?[0-9]+$
        type: string
  requestBodies:
    ChargingPointRequest:
      description: Create a charging point
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChargingPoint'
      required: true
  securitySchemes:
    OAuth2Password:
      type: oauth2
      flows:
        password:
          tokenUrl: https://oauth-staging.emobilitycloud.com/token
          scopes:
            account_admin: Account Admin
    OAuth2ClientCredential:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth-staging.emobilitycloud.com/token
          scopes:
            account: Account function
